---
title: Analysis
description: Here we provide a detailed analysis using more sophisticated statistics techniques.
toc: true
draft: false
---

![](https://upload.wikimedia.org/wikipedia/commons/7/77/Pebbleswithquarzite.jpg)


This comes from the file `analysis.qmd`.

We describe here our detailed data analysis.
This page will provide an overview of what questions you hope to ask, illustrations relevant aspects of the data with tables and figures, and a statistical model that attempts to answer part of the question.
You'll also reflect on next steps and further analysis.


```{r}
library(tidyverse)
library(googlesheets4)
library(gsheet)
library(googledrive)
library(readr)
cleansed_df1 = read_csv(file='./data/cleansed_df1.csv', show_col_types = FALSE)
use_for_force_original = read_csv(file='./data/use_for_force_original.csv',show_col_types = FALSE)
use_for_force = read_csv(file='./data/use_for_force.csv',show_col_types = FALSE)
ori_lookup = read_csv(file='./data/ori_lookup.csv',show_col_types = FALSE)
civilian_complaints= read_csv(file='./data/civilian_complaints.csv', show_col_types = FALSE)
```



## EDA and Modelling 

```{r}

table(cleansed_df1$ORI)
filtered_cleansed_df1 <- cleansed_df1 %>%
  group_by(ORI) %>%
  filter(n() == 1)
print(filtered_cleansed_df1)

filtered_use_for_force <- use_for_force %>%
  group_by(ORI) %>%
  filter(n() == 1)
print(filtered_use_for_force)
```

```{r}
colnames(filtered_use_for_force)[colnames(filtered_use_for_force) == "Police Department"] <- "police_department"

merged_data <- merge(filtered_use_for_force,filtered_cleansed_df1, by = "ORI", all = TRUE)
merged_data <- subset(merged_data, select = -police_department.x)
print(merged_data)
```
## Heatmap
```{r}
library(gplots)
library(corrplot)
colnames(merged_data)
selected_columns <- c("Total_Less_lethal_force_2020","Population","civilian_complaints_sustained_2020","discrimination_complaints_sustained_2020")
cor_matrix <- cor(merged_data[selected_columns], use = "complete.obs")
corrplot(cor_matrix, method = "color", type = "full", order = "hclust", 
         tl.col = "black", tl.srt = 45, 
         diag = TRUE) 
```
```{r}
# Assuming you've already installed and loaded necessary packages and your data is loaded

# Running a simple linear regression
model <- lm(civilian_complaints_sustained_2020/Population ~ Total_Less_lethal_force_2020/Population, data = merged_data)

# Viewing the summary of the model
summary(model)

# Making predictions
predictions <- predict(model, newdata = merged_data)

# Plotting (with ggplot2)
library(ggplot2)
ggplot(merged_data, aes(x = 1000*Total_Less_lethal_force_2020/Population, y = 1000*civilian_complaints_sustained_2020/Population)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE)
```

```{r}
#Bar plot
library(dplyr)
library(ggplot2)
cities_with_most_force <- merged_data %>%
  group_by(police_department.y) %>%  
  summarise(Recorded_Civilian_Cases = sum(civilian_complaints_reported_2020, na.rm = TRUE)) %>%
  arrange(desc(Recorded_Civilian_Cases))

# Display the top cities (You can change the number to display more or fewer cities)
head(cities_with_most_force, n = 6)

#top_cities_per_capita <- merged_data %>%
#  group_by(police_department.y) %>%
#  summarise(Total_Complaints = sum(civilian_complaints_reported_2020, na.rm = TRUE),
#            Population = mean(Population)) %>% 
#  mutate(Complaints_Per_Capita = (Total_Complaints / Population) * 100000) %>%
#  arrange(desc(Complaints_Per_Capita))

#top_cities_per_capita <- head(top_cities_per_capita, 6)
#top_cities_per_capita


# Define the key cities
key_cities <- c("New York", "Chicago", "Los Angeles", "Oakland", "Dallas", "Detroit")

# Filter the dataset for key cities
filtered_data <- merged_data %>%
  filter(police_department.y %in% key_cities)

#print(summary(filtered_data$civilian_complaints_reported_2020))
#filtered_data %>% 
#  group_by(police_department.y) %>% 
#  summarise(count = n())


# Create the bar plot for civilian complaints
ggplot(filtered_data, aes(x = police_department.y, y = civilian_complaints_reported_2020)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(title = "Civilian Complaints Reported for Top 6 Cities for 2020",
       x = "City",
       y = "Number of Complaints Reported") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 


#2017
cities_with_most_force2 <- civilian_complaints %>%
  group_by(`Police Department`) %>%  
  summarise(Recorded_Civilian_Cases = sum(civilian_complaints_reported_2017, na.rm = TRUE)) %>%
  arrange(desc(Recorded_Civilian_Cases))


head(cities_with_most_force2, n = 7)

key_cities <- c("New York", "Los Angeles", "Seattle", "Austin", "Oakland", "Detroit")

# Filter the dataset for key cities
filtered_data <- civilian_complaints %>%
  filter(`Police Department` %in% key_cities)

# Summarize the total complaints per state for 2018
top_departments_2017 <- filtered_data %>%
  group_by(`Police Department`) %>%
  summarise(Total_Complaints_2017 = sum(civilian_complaints_reported_2017, na.rm = TRUE)) %>%
  arrange(desc(Total_Complaints_2017)) %>%
  slice_head(n = 7)  # Select the top 6 departments

# Create the bar chart
ggplot(top_departments_2017, aes(x = `Police Department`, y = Total_Complaints_2017)) +
  geom_bar(stat = "identity", fill = "green") +
  labs(title = "Top 6 Cities with Most Civilian Complaints Reported in 2017",
       x = "Cities",
       y = "Number of Complaints Reported") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#2021
cities_with_most_force2 <- civilian_complaints %>%
  group_by(`Police Department`) %>%  
  summarise(Recorded_Civilian_Cases = sum(civilian_complaints_reported_2021, na.rm = TRUE)) %>%
  arrange(desc(Recorded_Civilian_Cases))


head(cities_with_most_force2, n = 7)

key_cities <- c("New York", "Chicago", "Fort Worth", "Los Angeles", "Detroit", "Colorado Springs")

# Filter the dataset for key cities
filtered_data <- civilian_complaints %>%
  filter(`Police Department` %in% key_cities)

# Summarize the total complaints per state for 2018
top_departments_2021 <- filtered_data %>%
  group_by(`Police Department`) %>%
  summarise(Total_Complaints_2021 = sum(civilian_complaints_reported_2021, na.rm = TRUE)) %>%
  arrange(desc(Total_Complaints_2021)) %>%
  slice_head(n = 7)  # Select the top 6 departments

# Create the bar chart
ggplot(top_departments_2021, aes(x = `Police Department`, y = Total_Complaints_2021)) +
  geom_bar(stat = "identity", fill = "red") +
  labs(title = "Top 6 Cities with Most Civilian Complaints Reported in 2021",
       x = "Cities",
       y = "Number of Complaints Reported") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))



```

```{r}
#install.packages("rstanarm")
library(rstanarm)

null_model_poisson <- stan_glm(Total_Less_lethal_force_2020 ~ 1, data = merged_data, family = poisson())

summary(null_model_poisson)
```


```{r step 3 Residual Plots}
merged_data <- subset(merged_data, !is.na(Total_Less_lethal_force_2020) & !is.na(civilian_complaints_sustained_2020))

#merged_data<-merged_data|>
#  filter(is.na(Total_Less_lethal_force_2020)==FALSE & is.na(civilian_complaints_sustained_2020)==FALSE)
merged_data

regression_model<-lm(civilian_complaints_sustained_2020~Total_Less_lethal_force_2020,data=merged_data)

res<-resid(regression_model)

plot(fitted(regression_model),res)|>
abline(0,0) 
qqnorm(res)
plot(density(res))

summary(res)
```

```{r}
library(gplots)
library(corrplot)
colnames(merged_data)
#adjust for population
merged_data$Total_Less_lethal_force_2020_porp <- merged_data$Total_Less_lethal_force_2020/merged_data$Population
merged_data$civilian_complaints_sustained_2020_porp <- merged_data$civilian_complaints_sustained_2020/merged_data$Population
merged_data$discrimination_complaints_sustained_2020_porp <- merged_data$discrimination_complaints_sustained_2020/merged_data$Population
# standardlize
columns_to_standardize <- c(
  "Total_Less_lethal_force_2020_porp",
  "civilian_complaints_sustained_2020_porp",
  "discrimination_complaints_sustained_2020_porp"
)
data_to_standardize <- merged_data[columns_to_standardize]
scaled_data <- scale(data_to_standardize)
merged_data[columns_to_standardize] <- scaled_data
print(merged_data)
#heatmap
selected_columns <- c("Total_Less_lethal_force_2020","Population","civilian_complaints_sustained_2020","discrimination_complaints_sustained_2020")
cor_matrix <- cor(merged_data[selected_columns], use = "complete.obs")
corrplot(cor_matrix, method = "color", type = "full", order = "hclust", 
         tl.col = "black", tl.srt = 45, 
         diag = TRUE) 
```
## Note on Attribution

In general, you should try to provide links to relevant resources, especially those that helped you. You don't have to link to every StackOverflow post you used but if there are explainers on aspects of the data or specific models that you found helpful, try to link to those. Also, try to link to other sources that might support (or refute) your analysis. These can just be regular hyperlinks. You don't need a formal citation.


If you are directly quoting from a source, please make that clear. You can show quotes using `>` like this

```
> To be or not to be.
```

> To be or not to be.

-------


## Rubric: On this page



* Introduce what motivates your Data Analysis (DA)
  * Which variables and relationships are you most interested in?
  * What questions are you interested in answering?
  * Provide context for the rest of the page. This will include figures/tables that illustrate aspects of the data of your question.
* Modeling and Inference 
  * The page will include some kind of formal statistical model. This could be a linear regression, logistic regression, or another modeling framework.
  * Explain the techniques you used for validating your results.
  * Describe the results of your modelling and make sure to give a sense of the uncertainty in your estimates and conclusions.
* Explain the flaws and limitations of your analysis
  * Are there some assumptions that you needed to make that might not hold? Is there other data that would help to answer your questions?
* Clarity Figures
  * Are your figures/tables/results easy to read, informative, without problems like overplotting, hard-to-read labels, etc?
  * Each figure should provide a key insight. Too many figures or other data summaries can detract from this. (While not a hard limit, around 5 total figures is probably a good target.)
  * Default `lm` output and plots are typically not acceptable.
* Clarity of Explanations
  * How well do you explain each figure/result?
  * Do you provide interpretations that suggest further analysis or explanations for observed phenomenon?
* Organization and cleanliness.
  * Make sure to remove excessive warnings, use clean easy-to-read code, organize with sections or multiple pages, use bullets, etc.
  * This page should be self-contained.